
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springboot-app
    ports:
      - "8080:8080"
    volumes:
      - ./:/app:delegated
      - ~/.m2:/root/.m2
      - ./pom.xml:/app/pom.xml
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/mydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_REDIS_HOST: redis
    depends_on:
      - postgres_db
      - rabbitmq
      - redis
    command: mvn spring-boot:run -Dspring-boot.run.fork=false
    networks:
      - app-network

  postgres_db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@example.com
#      PGADMIN_DEFAULT_PASSWORD: admin
#    ports:
#      - "4000:80"  # Access pgAdmin at http://localhost:4000
#    depends_on:
#      - postgres_db
#    networks:
#      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
